(()=>{"use strict";var e={136:()=>{try{self["workbox:core:7.2.0"]&&_()}catch(e){}},227:()=>{try{self["workbox:routing:7.2.0"]&&_()}catch(e){}},390:()=>{try{self["workbox:strategies:7.2.0"]&&_()}catch(e){}},447:()=>{try{self["workbox:precaching:7.2.0"]&&_()}catch(e){}}},t={};function s(a){var n=t[a];if(void 0!==n)return n.exports;var i=t[a]={exports:{}};return e[a](i,i.exports,s),i.exports}s(136);const a=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class n extends Error{constructor(e,t){super(a(e,t)),this.name=e,this.details=t}}const i={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},r=e=>[i.prefix,e,i.suffix].filter((e=>e&&e.length>0)).join("-"),c=e=>e||r(i.precache),o=e=>e||r(i.runtime);function h(e,t){const s=t();return e.waitUntil(s),s}s(447);function l(e){if(!e)throw new n("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:t,url:s}=e;if(!s)throw new n("add-to-cache-list-unexpected-type",{entry:e});if(!t){const e=new URL(s,location.href);return{cacheKey:e.href,url:e.href}}const a=new URL(s,location.href),i=new URL(s,location.href);return a.searchParams.set("__WB_REVISION__",t),{cacheKey:a.href,url:i.href}}class u{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if("install"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){const e=t.originalRequest.url;s?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return s}}}class f{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const s=(null==t?void 0:t.cacheKey)||this._precacheController.getCacheKeyForURL(e.url);return s?new Request(s,{headers:e.headers}):e},this._precacheController=e}}let d;async function p(e,t){let s=null;if(e.url){s=new URL(e.url).origin}if(s!==self.location.origin)throw new n("cross-origin-copy-response",{origin:s});const a=e.clone(),i={headers:new Headers(a.headers),status:a.status,statusText:a.statusText},r=t?t(i):i,c=function(){if(void 0===d){const t=new Response("");if("body"in t)try{new Response(t.body),d=!0}catch(e){d=!1}d=!1}return d}()?a.body:await a.blob();return new Response(c,r)}function g(e,t){const s=new URL(e);for(const a of t)s.searchParams.delete(a);return s.href}class y{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const w=new Set;s(390);function v(e){return"string"==typeof e?new Request(e):e}class m{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new y,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const s of this._plugins)this._pluginStateMap.set(s,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:t}=this;let s=v(e);if("navigate"===s.mode&&t instanceof FetchEvent&&t.preloadResponse){const e=await t.preloadResponse;if(e)return e}const a=this.hasCallback("fetchDidFail")?s.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))s=await e({request:s.clone(),event:t})}catch(r){if(r instanceof Error)throw new n("plugin-error-request-will-fetch",{thrownErrorMessage:r.message})}const i=s.clone();try{let e;e=await fetch(s,"navigate"===s.mode?void 0:this._strategy.fetchOptions);for(const s of this.iterateCallbacks("fetchDidSucceed"))e=await s({event:t,request:i,response:e});return e}catch(c){throw a&&await this.runCallbacks("fetchDidFail",{error:c,event:t,originalRequest:a.clone(),request:i.clone()}),c}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=v(e);let s;const{cacheName:a,matchOptions:n}=this._strategy,i=await this.getCacheKey(t,"read"),r=Object.assign(Object.assign({},n),{cacheName:a});s=await caches.match(i,r);for(const c of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await c({cacheName:a,matchOptions:n,cachedResponse:s,request:i,event:this.event})||void 0;return s}async cachePut(e,t){const s=v(e);var a;await(a=0,new Promise((e=>setTimeout(e,a))));const i=await this.getCacheKey(s,"write");if(!t)throw new n("cache-put-with-no-response",{url:(r=i.url,new URL(String(r),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var r;const c=await this._ensureResponseSafeToCache(t);if(!c)return!1;const{cacheName:o,matchOptions:h}=this._strategy,l=await self.caches.open(o),u=this.hasCallback("cacheDidUpdate"),f=u?await async function(e,t,s,a){const n=g(t.url,s);if(t.url===n)return e.match(t,a);const i=Object.assign(Object.assign({},a),{ignoreSearch:!0}),r=await e.keys(t,i);for(const c of r)if(n===g(c.url,s))return e.match(c,a)}(l,i.clone(),["__WB_REVISION__"],h):null;try{await l.put(i,u?c.clone():c)}catch(d){if(d instanceof Error)throw"QuotaExceededError"===d.name&&await async function(){for(const e of w)await e()}(),d}for(const n of this.iterateCallbacks("cacheDidUpdate"))await n({cacheName:o,oldResponse:f,newResponse:c.clone(),request:i,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this._cacheKeys[s]){let a=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))a=v(await e({mode:t,request:a,event:this.event,params:this.params}));this._cacheKeys[s]=a}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"==typeof t[e]){const s=this._pluginStateMap.get(t),a=a=>{const n=Object.assign(Object.assign({},a),{state:s});return t[e](n)};yield a}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const a of this.iterateCallbacks("cacheWillUpdate"))if(t=await a({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&200!==t.status&&(t=void 0),t}}class R{constructor(e={}){this.cacheName=o(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s="string"==typeof e.request?new Request(e.request):e.request,a="params"in e?e.params:void 0,n=new m(this,{event:t,request:s,params:a}),i=this._getResponse(n,s,t);return[i,this._awaitComplete(i,n,s,t)]}async _getResponse(e,t,s){let a;await e.runCallbacks("handlerWillStart",{event:s,request:t});try{if(a=await this._handle(t,e),!a||"error"===a.type)throw new n("no-response",{url:t.url})}catch(i){if(i instanceof Error)for(const n of e.iterateCallbacks("handlerDidError"))if(a=await n({error:i,event:s,request:t}),a)break;if(!a)throw i}for(const n of e.iterateCallbacks("handlerWillRespond"))a=await n({event:s,request:t,response:a});return a}async _awaitComplete(e,t,s,a){let n,i;try{n=await e}catch(i){}try{await t.runCallbacks("handlerDidRespond",{event:a,request:s,response:n}),await t.doneWaiting()}catch(r){r instanceof Error&&(i=r)}if(await t.runCallbacks("handlerDidComplete",{event:a,request:s,response:n,error:i}),t.destroy(),i)throw i}}class b extends R{constructor(e={}){e.cacheName=c(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(b.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const s=await t.cacheMatch(e);return s||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,t){let s;const a=t.params||{};if(!this._fallbackToNetwork)throw new n("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{0;const n=a.integrity,i=e.integrity,r=!i||i===n;if(s=await t.fetch(new Request(e,{integrity:"no-cors"!==e.mode?i||n:void 0})),n&&r&&"no-cors"!==e.mode){this._useDefaultCacheabilityPluginIfNeeded();await t.cachePut(e,s.clone());0}}return s}async _handleInstall(e,t){this._useDefaultCacheabilityPluginIfNeeded();const s=await t.fetch(e);if(!await t.cachePut(e,s.clone()))throw new n("bad-precaching-response",{url:e.url,status:s.status});return s}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,a]of this.plugins.entries())a!==b.copyRedirectedCacheableResponsesPlugin&&(a===b.defaultPrecacheCacheabilityPlugin&&(e=s),a.cacheWillUpdate&&t++);0===t?this.plugins.push(b.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}b.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},b.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await p(e):e};class C{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new b({cacheName:c(e),plugins:[...t,new f({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const t=[];for(const s of e){"string"==typeof s?t.push(s):s&&void 0===s.revision&&t.push(s.url);const{cacheKey:e,url:a}=l(s),i="string"!=typeof s&&s.revision?"reload":"default";if(this._urlsToCacheKeys.has(a)&&this._urlsToCacheKeys.get(a)!==e)throw new n("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(a),secondEntry:e});if("string"!=typeof s&&s.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==s.integrity)throw new n("add-to-cache-list-conflicting-integrities",{url:a});this._cacheKeysToIntegrities.set(e,s.integrity)}if(this._urlsToCacheKeys.set(a,e),this._urlsToCacheModes.set(a,i),t.length>0){const e=`Workbox is precaching URLs without revision info: ${t.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}install(e){return h(e,(async()=>{const t=new u;this.strategy.plugins.push(t);for(const[n,i]of this._urlsToCacheKeys){const t=this._cacheKeysToIntegrities.get(i),s=this._urlsToCacheModes.get(n),a=new Request(n,{integrity:t,cache:s,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:i},request:a,event:e}))}const{updatedURLs:s,notUpdatedURLs:a}=t;return{updatedURLs:s,notUpdatedURLs:a}}))}activate(e){return h(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),a=[];for(const n of t)s.has(n.url)||(await e.delete(n),a.push(n.url));return{deletedURLs:a}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.strategy.cacheName)).match(s)}}createHandlerBoundToURL(e){const t=this.getCacheKeyForURL(e);if(!t)throw new n("non-precached-url",{url:e});return s=>(s.request=new Request(e),s.params=Object.assign({cacheKey:t},s.params),this.strategy.handle(s))}}s(227);(async()=>{const e=function(){const e=JSON.parse(new URLSearchParams(self.location.search).get("params"));return e.debug&&console.log("[Docusaurus-PWA][SW]: Service Worker params:",e),e}(),t=[{"revision":"eb497c9ce05c0fe741bcbff695a8f2d8","url":"404.html"},{"revision":"98fd8b9cbcc5abc467d935ccc132ab45","url":"assets/css/styles.fd42f37a.css"},{"revision":"b5d409de1d659a8bfed1982b41b8e917","url":"assets/js/0b72a72f.6ba71ef8.js"},{"revision":"82f6bafc8f12fbf5aecc9ae5f26a974c","url":"assets/js/0e384e19.b6af9bb3.js"},{"revision":"7cbb3199652e90dbeb4dfdb19b09a3b3","url":"assets/js/1128852d.a8e1324e.js"},{"revision":"dc80042546a4df04c75774b713e4d29b","url":"assets/js/137b52b7.39e791b5.js"},{"revision":"bb624ac487523767648ad2ebe52d43ba","url":"assets/js/17896441.20f4c0e1.js"},{"revision":"9cef22c4d8d28e12bcd566e607a54315","url":"assets/js/190.b847f4f9.js"},{"revision":"d95a98316ac9db21c51683ce9bb821e3","url":"assets/js/42.6406eebf.js"},{"revision":"b4b166f1cec8dd14b85ab221ef4cceb6","url":"assets/js/47922e7d.6ab61416.js"},{"revision":"78bd64e8eb3a9d3e218062acdbd604e1","url":"assets/js/530f01d5.6938e0f4.js"},{"revision":"22214d3cb7cc953e0829bdd460ba30c5","url":"assets/js/582.6fc38cb3.js"},{"revision":"47f09e68125b42843f6071459a13871f","url":"assets/js/589.edb3df7e.js"},{"revision":"2d0d863e7a6f00bdac12c5fc25af5967","url":"assets/js/5cd13e5c.b78ea92c.js"},{"revision":"09f2e749f82a0c7c50ebae83e9eaa41c","url":"assets/js/5e95c892.b77fed87.js"},{"revision":"b8f1a7cebcf9c0b03b926dd3fc3f0b9c","url":"assets/js/649.66b38bb1.js"},{"revision":"ce05575350c88ca5bded5a0eeeb23955","url":"assets/js/730.6d727b6b.js"},{"revision":"d4eccff17641be4ed4ec6179105e0081","url":"assets/js/84585675.52fb0b90.js"},{"revision":"3fb318e0767b7b7953f331ba9db36031","url":"assets/js/918.894ed5aa.js"},{"revision":"d60bef2b15ac8f423bfea52a31bf1bcc","url":"assets/js/a7bd4aaa.090500f2.js"},{"revision":"e918e0c2d92ea9cc4b9ea8e423b87cd5","url":"assets/js/a94703ab.072c9d4a.js"},{"revision":"d5b685c0de599d230231548a30ed0c24","url":"assets/js/aba21aa0.fc22d1fd.js"},{"revision":"941d0d588e524ac30443bcb6350f7881","url":"assets/js/c0e20c00.acb2ad3d.js"},{"revision":"f4233810927edada0936ae1c6aae9374","url":"assets/js/c79a5049.343e1dff.js"},{"revision":"b68e2bd676e343b9247842c28823211b","url":"assets/js/fc32d178.b4ce64ca.js"},{"revision":"9e4ba4c852a865096f7b9dda3c327bb8","url":"assets/js/main.9621b2ae.js"},{"revision":"0fc49a5986e21075f8cb3449388a68de","url":"assets/js/runtime~main.888a09fe.js"},{"revision":"9056d9fed439e271a5bf44dd7d6eda3a","url":"Assignments/assignment1.html"},{"revision":"0daae4fd45771ea2591b0bb00f3204c5","url":"Assignments/assignment2.html"},{"revision":"e732bc90a9b3f106f7368540d35bc7f7","url":"index.html"},{"revision":"0686f842fa3afc3f2e4ec47094375c0f","url":"Labs/lab1.html"},{"revision":"ac4597db7227d766ccdaf7d3e00ee203","url":"Labs/lab2.html"},{"revision":"41a660159feb2cf4df4c4f21cff2ac00","url":"Labs/lab3.html"},{"revision":"d197a498f9f43c58fd5b49f6d344c79d","url":"Labs/lab4.html"},{"revision":"a5be27e9199ac23c8adfbf7388114e91","url":"Labs/lab5.html"},{"revision":"cac61b523aed227f7285babb0a6f3a2f","url":"Labs/lab6.html"},{"revision":"a5a87167bc1b795581793ae60353df1c","url":"lunr-index-1761514114206.json"},{"revision":"a5a87167bc1b795581793ae60353df1c","url":"lunr-index.json"},{"revision":"2524df02c6e551be5aef857403777080","url":"manifest.json"},{"revision":"1bf273d59d1d1c4b4fa4f283a240cda4","url":"search-doc-1761514114206.json"},{"revision":"1bf273d59d1d1c4b4fa4f283a240cda4","url":"search-doc.json"},{"revision":"6aff29b679d552bb8f5ba448e1061a16","url":"weekly-schedule.html"},{"revision":"6bb8932442d18275186b307e150183d2","url":"assets/images/hosts-file-1686565d088b010cc5db55d9708790b0.png"},{"revision":"315ee54f660c77454ea24517ad696fff","url":"assets/images/hosts-folder-location-1ba9f16021425000bed42d7adab6d9cc.png"},{"revision":"4aebf7acf7097f620fbb7640aa9cc1e3","url":"assets/images/lab1-flowchart-f3bc963aa16d42e82c115f3c5339b116.png"},{"revision":"f6da077da95c9dc567ca825254ec0e06","url":"assets/images/lab1-investigation3-flowchart-ea715773eedda09cff4c62f46353547c.png"},{"revision":"cf332b4a751b5d868503f49e6d302660","url":"assets/images/lab1-investigation5-flowchart-dd57fc2a67f851f8f5137ac10135b6f3.png"},{"revision":"433b616e6f5248213714654145e3f881","url":"assets/images/lab1-netdiag-srv1-746415bf963c2a9c0f99d4ad3877b8dd.png"},{"revision":"b2d4e6adea3969a7e01621a4896d815d","url":"assets/images/lab1-netdiag-srv2-4e81bad6a3ba97e8eae33d2bc74234f8.png"},{"revision":"181dee2c8e88e02f8b1d426a615a4cee","url":"assets/images/local-user-dialog-f0ea2770fac12124c4e1c1146a7f080b.png"},{"revision":"e74945a981f2c70e7a9706c6a9256848","url":"assets/images/new-local-user-19b7ae7ab7c0c8a08eb3255d732dba6e.png"},{"revision":"ca8b3880f64343691299d495841e7c74","url":"assets/images/new-user-added-to-list-2b4aae81a38904ad7bdc8e8e50cdc148.png"},{"revision":"c456fa9c618c66758a9979fcf9100175","url":"assets/images/NPS-application-fac615e04c9c68a2bf1742817a6c0c01.png"},{"revision":"2c0277eb8a20b9a46477b847bf8b0ff7","url":"assets/images/NPS-grant-access-a8b1aa82c09eb5c6b4225b21121d8bfc.png"},{"revision":"d5d7a97ff060b9545a8ae94109c0e817","url":"assets/images/nslookup-srv1-111b720195c114fe2bdd762375ed39e1.png"},{"revision":"218d5734e880d13588d525917d2bda3c","url":"assets/images/RRAS-auth-methods-complete-e991d8a03541a1bcb82acbc4087708ca.png"},{"revision":"ee94601d71ed414bc9de2cee08f64654","url":"assets/images/RRAS-donotstart-fc7fa89b705366e9fa09b650b52aa6a1.png"},{"revision":"67b20854560791704321fb48140e2c55","url":"assets/images/RRAS-IP-range-mini-fbce15c12f6d480ba8648e04ff14874e.png"},{"revision":"cbc3e3dbd628cd9b86d7eaa10bfe9004","url":"assets/images/RRAS-IPv4-complete-65352f38424404dfdb68c80ed54ac3b6.png"},{"revision":"826407286b3925e882afe94c1b6efd7b","url":"assets/images/RRAS-offline-a8d9a42c99064add2123f32484c8d28c.png"},{"revision":"5a3f99c06ff5f9b96ce280ef493f33d9","url":"assets/images/RRAS-ports-complete-c119fd1f072d3ba7258b7d5663f78bd4.png"},{"revision":"ebdc153e50f77e4f44fadd08f1af1875","url":"assets/images/RRAS-PSK-86157a66671729fd03ce4adc2ca2ca80.png"},{"revision":"db1c0ade63d04540f0d235b80d4a16c5","url":"assets/images/srv1-save-80e63f95473df4a899f9203d7f6c4817.png"},{"revision":"13d60ef009f7794e39a4ed16c660334e","url":"assets/images/srv2-dnsentries-3af08e5dd17303a77ab31a5cde50a502.png"},{"revision":"b5c26006d5db9ea75eeaa4cb4aa6d0b8","url":"assets/images/vpn-client-settings-7bb2548c979281bbb7084f5552052410.png"},{"revision":"d878da2e9380e2feda624b0137d4f8f6","url":"assets/images/vpn-connected-aabb34ceebcf8e37243ed3764df984ab.png"},{"revision":"56166fe85c9fed3c3246758a7a2a7dd0","url":"img/configure-RRAS.png"},{"revision":"bda93dcd6f88fdc4ed82922c1bc8771e","url":"img/disable-RRAS-confirmation.png"},{"revision":"f9f715989e95c856758adf608abf93c6","url":"img/disable-RRAS.png"},{"revision":"7fa1a026116afe175cae818030d4ffc4","url":"img/docusaurus.png"},{"revision":"ef2266bfb84465c731756b58cde0afb8","url":"img/favicon.ico"},{"revision":"6bb8932442d18275186b307e150183d2","url":"img/hosts-file.png"},{"revision":"315ee54f660c77454ea24517ad696fff","url":"img/hosts-folder-location.png"},{"revision":"5d047c0f8635c3c5472dde7226d85288","url":"img/L2TP-port-change.png"},{"revision":"4aebf7acf7097f620fbb7640aa9cc1e3","url":"img/lab1-flowchart.png"},{"revision":"f6da077da95c9dc567ca825254ec0e06","url":"img/lab1-investigation3-flowchart.png"},{"revision":"cf332b4a751b5d868503f49e6d302660","url":"img/lab1-investigation5-flowchart.png"},{"revision":"433b616e6f5248213714654145e3f881","url":"img/lab1-netdiag-srv1.png"},{"revision":"b2d4e6adea3969a7e01621a4896d815d","url":"img/lab1-netdiag-srv2.png"},{"revision":"181dee2c8e88e02f8b1d426a615a4cee","url":"img/local-user-dialog.png"},{"revision":"22c6eb8088b86099d5a78b5a13f7b24d","url":"img/logo-dark.svg"},{"revision":"8817e00103e8837d17c2758b0ce25c41","url":"img/logo.svg"},{"revision":"e74945a981f2c70e7a9706c6a9256848","url":"img/new-local-user.png"},{"revision":"ca8b3880f64343691299d495841e7c74","url":"img/new-user-added-to-list.png"},{"revision":"c456fa9c618c66758a9979fcf9100175","url":"img/NPS-application.png"},{"revision":"2c0277eb8a20b9a46477b847bf8b0ff7","url":"img/NPS-grant-access.png"},{"revision":"d5d7a97ff060b9545a8ae94109c0e817","url":"img/nslookup-srv1.png"},{"revision":"1ae75e172a5b70433ffb211187177318","url":"img/ports-default-number.png"},{"revision":"ad59341b3a2f5aba4fe2109e526bc8c2","url":"img/ports-GRE-zero.png"},{"revision":"d5eb101d3c0527a6c32ae5c117fa4f08","url":"img/PSK-key.png"},{"revision":"2e1cb1ba37fc5ae886ea57248bdb60bd","url":"img/pwa/icon-192x192.png"},{"revision":"a0f8ed72d3d3489353a57a03aeac9b0d","url":"img/pwa/icon-256x256.png"},{"revision":"ab9ed19e2716b5c233d6132d66204d53","url":"img/pwa/icon-384x384.png"},{"revision":"b71acc5b894ccfac0c22eb39a590f2a0","url":"img/pwa/icon-512x512.png"},{"revision":"2041749d4462d140e4fe3f3d79cd3194","url":"img/restart-L2TP.png"},{"revision":"ecaeef16041e30e589a2832629f39ff8","url":"img/restart-LT2P-v2.png"},{"revision":"218d5734e880d13588d525917d2bda3c","url":"img/RRAS-auth-methods-complete.png"},{"revision":"d5a5335955c28aab19ce11d4d7aee826","url":"img/RRAS-auth-options-nopsk.png"},{"revision":"5bde34afa2f977e9431f885c0d7006dd","url":"img/RRAS-auth-options.png"},{"revision":"ee94601d71ed414bc9de2cee08f64654","url":"img/RRAS-donotstart.png"},{"revision":"67b20854560791704321fb48140e2c55","url":"img/RRAS-IP-range-mini.png"},{"revision":"9deb202d316f5a9f5d9109d2e25a6efc","url":"img/RRAS-IP-range.png"},{"revision":"cbc3e3dbd628cd9b86d7eaa10bfe9004","url":"img/RRAS-IPv4-complete.png"},{"revision":"826407286b3925e882afe94c1b6efd7b","url":"img/RRAS-offline.png"},{"revision":"5a3f99c06ff5f9b96ce280ef493f33d9","url":"img/RRAS-ports-complete.png"},{"revision":"ebd224099d8d5ea5c2deb1b6a03f5d6d","url":"img/RRAS-properties-menu.png"},{"revision":"ebdc153e50f77e4f44fadd08f1af1875","url":"img/RRAS-PSK.png"},{"revision":"451a290b2ed93c083a72e79534275991","url":"img/RRAS-services.png"},{"revision":"db1c0ade63d04540f0d235b80d4a16c5","url":"img/srv1-save.png"},{"revision":"13d60ef009f7794e39a4ed16c660334e","url":"img/srv2-dnsentries.png"},{"revision":"b9d9189ed8f8dd58e70d9f8b3f693b3e","url":"img/tutorial/docsVersionDropdown.png"},{"revision":"c14bff79aafafca0957ccc34ee026e2c","url":"img/tutorial/localeDropdown.png"},{"revision":"8d04d316f4d1777793ee773fcbf16cea","url":"img/undraw_docusaurus_mountain.svg"},{"revision":"3d3d63efa464a74e2befd1569465ed21","url":"img/undraw_docusaurus_react.svg"},{"revision":"932b535fc71feb29877bc4b9d708b1d0","url":"img/undraw_docusaurus_tree.svg"},{"revision":"b5c26006d5db9ea75eeaa4cb4aa6d0b8","url":"img/vpn-client-settings.png"},{"revision":"b95e958630bd5ec7961dc9e4b2ae1230","url":"img/vpn-client-settings2.png"},{"revision":"d878da2e9380e2feda624b0137d4f8f6","url":"img/vpn-connected.png"},{"revision":"2e38e06c8e3cf15b26a7413ec32d1d06","url":"img/VPN-port-properties-menu.png"},{"revision":"8fe59f133d63716d7cbe61191313f953","url":"img/VPN-port-range.png"},{"revision":"400f90c5f78d29941b5ad8265faaa96c","url":"img/vpn-present.png"}],s=new C({fallbackToNetwork:!0});e.offlineMode&&(s.addToCacheList(t),e.debug&&console.log("[Docusaurus-PWA][SW]: addToCacheList",{precacheManifest:t})),await async function(){}(),self.addEventListener("install",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: install event",{event:t}),t.waitUntil(s.install(t))})),self.addEventListener("activate",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: activate event",{event:t}),t.waitUntil(s.activate(t))})),self.addEventListener("fetch",(async t=>{if(e.offlineMode){const a=t.request.url,n=function(e){const t=new URL(e,self.location.href);return t.origin!==self.location.origin?[]:(t.search="",t.hash="",[t.href,`${t.href}${t.pathname.endsWith("/")?"":"/"}index.html`])}(a);for(const i of n){const r=s.getCacheKeyForURL(i);if(r){const s=caches.match(r);e.debug&&console.log("[Docusaurus-PWA][SW]: serving cached asset",{requestURL:a,possibleURL:i,possibleURLs:n,cacheKey:r,cachedResponse:s}),t.respondWith(s);break}}}})),self.addEventListener("message",(async t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: message event",{event:t});const s=t.data?.type;"SKIP_WAITING"===s&&self.skipWaiting()}))})()})();